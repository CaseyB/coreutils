initSidebarItems({"fn":[["build_parse_format","Builds the correct datetime format string to parse `date`."],["convert_tm_to_datetime","Converts `time::Tm` to `chrono::DateTime` depending on which `strformat` was used to parse. If a time unit was not given it will substitute with the current time."],["date","prints the local datetime. If `is_utc` is true, the datetime is printed in universal time. If `date` is Some it will get parsed and printed out instead of the current datetime."],["format","displays `datetime` with given `output_format`"],["format_rfc2822","displays `datetime` in rfc2822 format"],["format_standard","displays `datetime` standard format `\"%a %b %e %k:%M:%S %Z %Y\"`"],["main",""],["parse_date","Parsed datetime from `date_str` with `format`."],["parse_datetime_from_str","This function parses `datetime` of given `format`. If `datetime` is not enough for a unique `DateTime` it uses die values of today."],["parse_file","Returns the modified date of `filename`. Returns `NotFound` if `filename` could not be found."],["parse_seconds","Return the local `DateTime`"],["read","Reads datetime from `input`. Could be seconds or a filepath."],["read_date","Parses datetime from `date_str` with format `[[[[[cc]yy]mm]dd]HH]MM[.ss]`."],["set_os_time","Sets the os datetime to `datetime`"]]});